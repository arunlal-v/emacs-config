#+TITLE: My Emacs Config
#+AUTHOR: Arunlal

* PACKAGE MANAGEMENT
  ** Setup package.el to work with MELPA
  #+BEGIN_SRC emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
  '("melpa" . "https://melpa.org/packages/"))
  (package-refresh-contents)
  (package-initialize)
  #+END_SRC
  ** Installing use-package
  #+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'use-package)
  (package-install 'use-package))
  #+END_SRC

* DASHBOARD
  Emacs dashboard is an extensible startup screen showing you recent files, bookmarks, agenda items, and an Emacs banner.
  #+BEGIN_SRC emacs-lisp
  (use-package all-the-icons :ensure t) ;;Make sure all-the-icons package is installed
  ;;Ensure to run the command: all-the-icons-install-fonts
  (use-package dashboard
  :ensure t ;;install dashboard if not installed
  :init ;; tweak dashboard's configuration before loading it
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  (setq dashboard-banner-logo-title "Keep Walking!")
  (setq dashboard-startup-banner "~/.emacs.d/keep-walking.png")
  (setq dashboard-center-content nil)
  (setq dashboard-items '(
      (recents . 10)
      (agenda . 5)
      (bookmarks . 5)
      (registers . 5)
  ))
  :config
  (dashboard-setup-startup-hook)
  (dashboard-modify-heading-icons '(
    (recents. "file-text")
    (bookmarks . "book"))))
  ;;This is for client mode  
  (setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))
  #+END_SRC
* ZOOM
  **Zooming in and out
  Use Ctrl = and Ctrl - to increase and decrease scale
  #+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-=") 'text-scale-increase)
  (global-set-key (kbd "C--") 'text-scale-decrease)
  (global-set-key (kbd "C-0") (lambda () (interactive) (text-scale-adjust 0)))
  (global-set-key (kbd "<C-wheel-up>") 'text-scale-increase)
  (global-set-key (kbd "<C-wheel-down>") 'text-scale-decrease)
  #+END_SRC
* SEARCH SETTINGS
  **All menu bars, tools bars
  #+BEGIN_SRC emacs-lisp
  (setq lazy-highlight-cleanup nil) ;;This is to retain search highlight after searching is complete
  #+END_SRC
* GUI SETTINGS
  **All menu bars, tools bars
  #+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (global-display-line-numbers-mode 1)
  (setq-default line-spacing 0.10)
  (setq display-line-numbers-type 'relative)
  #+END_SRC
* PROCECTILE
  #+BEGIN_SRC emacs-lisp
  (use-package projectile
  :ensure t
  :config
  (projectile-global-mode 1))
  #+END_SRC

* WHICH KEY
  **give all the commands bound to a prefix key
  #+BEGIN_SRC emacs-lisp
  (use-package which-key
  :ensure t)
  (which-key-mode)
  (which-key-setup-side-window-bottom)
  #+END_SRC

* MAGIT
  #+begin_src emacs-lisp
      (use-package magit :ensure t)
      (setq magit-clone-set-remote-head t) ;;Preserve git's default of setting remote head, instead of magit's delete
  #+end_src
* WEB Development
  **Modes and tools for web development
  #+BEGIN_SRC emacs-lisp
  (use-package js2-mode :ensure t)
  (use-package emmet-mode :ensure t)
  (use-package markdown-mode :ensure t)
  (use-package web-mode :ensure t)
  (use-package prettier :ensure t)
  (electric-pair-mode 1)
  (emmet-mode 1)
  #+END_SRC
* KEY CAST for displaying keys and commands in mode line
  https://www.youtube.com/watch?v=L9GcNrhx-iE
  **Modes and tools for web development
  #+BEGIN_SRC emacs-lisp
  (use-package keycast :ensure t)
;;  (keycast-mode) ;;  Disable keycast mode by default
  #+END_SRC
* Company mode for autocompletion
  #+BEGIN_SRC emacs-lisp
  (use-package company :ensure t)
  (company-mode)
  #+END_SRC
* BUFFER MENU Customizations
** Auto-completion ignore case
  #+BEGIN_SRC emacs-lisp
  (setq completion-ignore-case t)
  (setq read-file-name-completion-ignore-case t)
  (setq read-buffer-completion-ignore-case t)
  #+END_SRC
* HISTORY
  #+BEGIN_SRC emacs-lisp
  (savehist-mode 1)
  #+END_SRC
* GOLDPLATING
** FONT
  All fonts can be found at
  https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/SourceCodePro/Regular/complete
  https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Ubuntu/Regular/complete
  For windows, the font name should be different. This name can be found in the font manager against the tag Font Name.
  For instance, the below mentioned fonts will be "SauceCodePro NF 11" and "Ubuntu NF 11"
  #+BEGIN_SRC emacs-lisp
    (set-face-attribute 'default nil
      :font "SauceCodePro Nerd Font 11"
      :weight 'medium)
    (set-face-attribute 'variable-pitch nil
      :font "Ubuntu Nerd Font 11"
      :weight 'medium)
    (set-face-attribute 'fixed-pitch nil
      :font "SauceCodePro Nerd Font 11"
      :weight 'medium)
    ;;Needed for client
    (add-to-list 'default-frame-alist '(font . "SauceCodePro Nerd Font 11"))
  #+END_SRC
** THEME
  ** Doom emacs
  #+BEGIN_SRC emacs-lisp
  (use-package doom-themes
  :ensure t)
  (setq doom-themes-enable-bold t doom-themes-enable-italic t)
  (load-theme 'doom-shades-of-purple t)
  #+END_SRC
** MODE LINE
  **doom mode line
  #+BEGIN_SRC emacs-lisp
  (use-package doom-modeline
  :ensure t)
  (doom-modeline-mode 1)
  #+END_SRC
